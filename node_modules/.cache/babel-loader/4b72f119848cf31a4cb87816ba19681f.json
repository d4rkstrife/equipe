{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pgdc8\\\\OneDrive\\\\Bureau\\\\projet\\\\gare\\\\equipe\\\\src\\\\App.js\";\nimport React, { Fragment } from 'react';\nimport './App.css';\nimport ListeGare from './ListeGare';\nimport firebase from 'firebase';\nimport LogIn from './LogIn';\nimport Nav from './Nav';\nimport Form from './Form';\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport FormList from './FormList';\nimport './Nav.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      connectedUser: false,\n      pageReady: false,\n      isAdmin: false\n    };\n    this.logOut = this.logOut.bind(this);\n  }\n\n  render() {\n    if (this.state.pageReady && this.state.connectedUser) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(Nav, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(BrowserRouter, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"/\",\n        component: ListeGare,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/formList\",\n        component: () => /*#__PURE__*/React.createElement(FormList, {\n          isAdmin: this.state.isAdmin,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 66\n          }\n        }),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"/form\",\n        component: Form,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      })));\n    } else if (this.state.pageReady && !this.state.connectedUser) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }\n      }, \"Equipe de ligne\"), /*#__PURE__*/React.createElement(LogIn, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"App\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }\n      }, \"Equipe de ligne\"), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }\n      }, \"Chargement...\"));\n    }\n  }\n\n  componentDidMount() {\n    let that = this;\n    firebase.auth().onAuthStateChanged(function (user) {\n      that.setState({\n        connectedUser: user\n      });\n      let userDb = firebase.firestore();\n\n      if (user) {\n        userDb.collection('adminUsers').doc(user.email).get().then(function (doc) {\n          if (doc.exists && doc.data().isAdmin === true) {\n            that.setState({\n              isAdmin: true\n            });\n          }\n        }).catch(function (error) {\n          console.log(\"Error getting document:\", error);\n        });\n      }\n    });\n    setTimeout(() => {\n      this.setState({\n        pageReady: true\n      });\n    }, 1000);\n  }\n\n  logOut() {\n    let that = this;\n    firebase.auth().signOut().then(function () {\n      // Sign-out successful.\n      that.setState({\n        connectedUser: null,\n        isAdmin: false\n      });\n    }).catch(function (error) {// An error happened.\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/pgdc8/OneDrive/Bureau/projet/gare/equipe/src/App.js"],"names":["React","Fragment","ListeGare","firebase","LogIn","Nav","Form","BrowserRouter","Route","FormList","App","Component","constructor","props","state","connectedUser","pageReady","isAdmin","logOut","bind","render","componentDidMount","that","auth","onAuthStateChanged","user","setState","userDb","firestore","collection","doc","email","get","then","exists","data","catch","error","console","log","setTimeout","signOut"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport './App.css';\r\nimport ListeGare from './ListeGare';\r\nimport firebase from 'firebase';\r\nimport LogIn from './LogIn';\r\nimport Nav from './Nav';\r\nimport Form from './Form';\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\nimport FormList from './FormList';\r\nimport './Nav.css';\r\n\r\nclass App extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            connectedUser: false,\r\n            pageReady: false,\r\n            isAdmin: false\r\n        }\r\n        this.logOut = this.logOut.bind(this)\r\n    }\r\n    render() {\r\n\r\n        if (this.state.pageReady && this.state.connectedUser) {\r\n            return (\r\n                <Fragment>\r\n                    <Nav />\r\n                    <BrowserRouter>\r\n                        <Route exact path=\"/\" component={ListeGare} />\r\n                        <Route path=\"/formList\" component={() => <FormList isAdmin={this.state.isAdmin} />} />\r\n                        <Route path=\"/form\" component={Form} />\r\n                    </BrowserRouter >\r\n                </Fragment>\r\n\r\n            );\r\n        } else if (this.state.pageReady && !this.state.connectedUser) {\r\n            return (\r\n                <div className=\"App\">\r\n                    <h1>Equipe de ligne</h1>\r\n                    <LogIn />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <div className=\"App\">\r\n                    <h1>Equipe de ligne</h1>\r\n                    <p>Chargement...</p>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        let that = this\r\n        firebase.auth().onAuthStateChanged(function (user) {\r\n            that.setState({ connectedUser: user });\r\n            let userDb = firebase.firestore();\r\n            if (user) {\r\n                userDb.collection('adminUsers').doc(user.email).get()\r\n                    .then(function (doc) {\r\n                        if (doc.exists && doc.data().isAdmin === true) {\r\n                            that.setState({ isAdmin: true })\r\n                        }\r\n                    }).catch(function (error) {\r\n                        console.log(\"Error getting document:\", error);\r\n                    });\r\n            }\r\n        })\r\n\r\n\r\n        setTimeout(() => { this.setState({ pageReady: true }) }, 1000);\r\n    }\r\n    logOut() {\r\n        let that = this\r\n        firebase.auth().signOut().then(function () {\r\n            // Sign-out successful.\r\n            that.setState({ connectedUser: null, isAdmin: false })\r\n        }).catch(function (error) {\r\n            // An error happened.\r\n        });\r\n    }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}