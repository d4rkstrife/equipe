{"ast":null,"code":"import _classCallCheck from\"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\my-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from'react';import*as firebase from\"firebase\";import Gare from'./Gare';var ListeGare=/*#__PURE__*/function(_React$Component){_inherits(ListeGare,_React$Component);var _super=_createSuper(ListeGare);function ListeGare(props){var _this;_classCallCheck(this,ListeGare);_this=_super.call(this,props);_this.state={error:null,isLoaded:false,items:[]};return _this;}_createClass(ListeGare,[{key:\"componentDidMount\",value:function componentDidMount(){var db=firebase.firestore();var that=this;db.collection(\"gare\").orderBy(\"ordre\").onSnapshot(function(querySnapshot){that.setState({isLoaded:true,items:querySnapshot.docs});});}},{key:\"render\",value:function render(){var _this$state=this.state,error=_this$state.error,isLoaded=_this$state.isLoaded,items=_this$state.items;if(error){return/*#__PURE__*/React.createElement(\"div\",null,\"Erreur : \",error.message);}else if(!isLoaded){return/*#__PURE__*/React.createElement(\"div\",null,\"Chargement\\u2026\");}else{return/*#__PURE__*/React.createElement(\"div\",null,items.map(function(item,index){return/*#__PURE__*/React.createElement(Gare,{key:index,data:item.data(),id:item.id});}));}}}]);return ListeGare;}(React.Component);export default ListeGare;","map":{"version":3,"sources":["C:/Users/pgdc8/Desktop/my-app/src/ListeGare.js"],"names":["React","firebase","Gare","ListeGare","props","state","error","isLoaded","items","db","firestore","that","collection","orderBy","onSnapshot","querySnapshot","setState","docs","message","map","item","index","data","id","Component"],"mappings":"omBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,UAA1B,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,C,GAEMC,CAAAA,S,kHACF,mBAAYC,KAAZ,CAAmB,2CACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,CACTC,KAAK,CAAE,IADE,CAETC,QAAQ,CAAE,KAFD,CAGTC,KAAK,CAAE,EAHE,CAAb,CAFe,aAOlB,C,mFAGmB,CAChB,GAAMC,CAAAA,EAAE,CAAGR,QAAQ,CAACS,SAAT,EAAX,CACA,GAAIC,CAAAA,IAAI,CAAG,IAAX,CACAF,EAAE,CAACG,UAAH,CAAc,MAAd,EAAsBC,OAAtB,CAA8B,OAA9B,EAEKC,UAFL,CAEgB,SAAUC,aAAV,CAAyB,CACjCJ,IAAI,CAACK,QAAL,CAAc,CACVT,QAAQ,CAAE,IADA,CAEVC,KAAK,CAAEO,aAAa,CAACE,IAFX,CAAd,EAIH,CAPL,EAQH,C,uCACQ,iBAC8B,KAAKZ,KADnC,CACGC,KADH,aACGA,KADH,CACUC,QADV,aACUA,QADV,CACoBC,KADpB,aACoBA,KADpB,CAEL,GAAIF,KAAJ,CAAW,CACP,mBAAO,2CAAeA,KAAK,CAACY,OAArB,CAAP,CACH,CAFD,IAEO,IAAI,CAACX,QAAL,CAAe,CAClB,mBAAO,kDAAP,CACH,CAFM,IAEA,CAEH,mBACI,+BAEQC,KAAK,CAACW,GAAN,CAAU,SAACC,IAAD,CAAOC,KAAP,qBACN,oBAAC,IAAD,EAAM,GAAG,CAAEA,KAAX,CAAkB,IAAI,CAAED,IAAI,CAACE,IAAL,EAAxB,CAAqC,EAAE,CAAEF,IAAI,CAACG,EAA9C,EADM,EAAV,CAFR,CADJ,CASH,CACJ,C,uBAzCmBvB,KAAK,CAACwB,S,EA2C9B,cAAerB,CAAAA,SAAf","sourcesContent":["import React from 'react';\r\nimport * as firebase from \"firebase\";\r\nimport Gare from './Gare'\r\n\r\nclass ListeGare extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            items: []\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const db = firebase.firestore();\r\n        let that = this\r\n        db.collection(\"gare\").orderBy(\"ordre\")\r\n\r\n            .onSnapshot(function (querySnapshot) {\r\n                that.setState({\r\n                    isLoaded: true,\r\n                    items: querySnapshot.docs\r\n                });\r\n            })\r\n    }\r\n    render() {\r\n        const { error, isLoaded, items } = this.state;\r\n        if (error) {\r\n            return <div>Erreur : {error.message}</div>;\r\n        } else if (!isLoaded) {\r\n            return <div>Chargementâ€¦</div>;\r\n        } else {\r\n\r\n            return (\r\n                <div>\r\n                    {\r\n                        items.map((item, index) =>\r\n                            <Gare key={index} data={item.data()} id={item.id} />\r\n                        )\r\n                    }\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\nexport default ListeGare"]},"metadata":{},"sourceType":"module"}