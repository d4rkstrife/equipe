{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\equipe\\\\src\\\\FormList.js\";\nimport React, { Component, Fragment } from 'react';\nimport firebase from 'firebase';\nimport FormConsult from './FormConsult';\n\nclass FormList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdmin: props.isAdmin\n    };\n    this.getRapportByDate = this.getRapportByDate.bind(this);\n  }\n\n  render() {\n    if (!this.state.items) {\n      return /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.getRapportByDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 25\n        }\n      }, \"Date : \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"date\",\n        onChange: e => this.setState({\n          date: e.target.value\n        }),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"pink_button\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, \"Rapports\")));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }\n      }, this.state.items.map((item, index) => /*#__PURE__*/React.createElement(FormConsult, {\n        data: item,\n        key: index,\n        type: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 29\n        }\n      })));\n    }\n  }\n  /*  componentDidMount() {\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\")\r\n                .onSnapshot((querySnapshot) => {\r\n                this.setState({\r\n                    items: querySnapshot.docs\r\n                });\r\n            })\r\n    }*/\n\n\n  getRapportByDate() {\n    let db = firebase.firestore();\n    db.collection(\"rapports\").where(\"date\", \"==\", this.state.date).onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs\n      });\n    });\n  }\n\n  getRapportsByNumber(number) {\n    let db = firebase.firestore();\n    db.collection(\"rapports\").where(\"numeroTrain\", \"==\", number).onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs\n      });\n    });\n  }\n\n}\n\nexport default FormList;","map":{"version":3,"sources":["C:/Users/pgdc8/Desktop/equipe/src/FormList.js"],"names":["React","Component","Fragment","firebase","FormConsult","FormList","constructor","props","state","isAdmin","getRapportByDate","bind","render","items","e","setState","date","target","value","map","item","index","db","firestore","collection","where","onSnapshot","querySnapshot","docs","getRapportsByNumber","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEF,KAAK,CAACE;AADN,KAAb;AAGA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKJ,KAAL,CAAWK,KAAhB,EAAuB;AACnB,0BACI;AAAM,QAAA,QAAQ,EAAE,KAAKH,gBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AACI,QAAA,QAAQ,EAAEI,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEC,UAAAA,IAAI,EAAEF,CAAC,CAACG,MAAF,CAASC;AAAjB,SAAd,CADnB;AAC4D,QAAA,QAAQ,MADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAII;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ,CADJ;AAWH,KAZD,MAYO;AACH,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKV,KAAL,CAAWK,KAAX,CAAiBM,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACjB,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAED,IAAnB;AAAyB,QAAA,GAAG,EAAEC,KAA9B;AAAqC,QAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFR,CADJ;AASH;AACJ;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEIX,EAAAA,gBAAgB,GAAG;AACf,QAAIY,EAAE,GAAGnB,QAAQ,CAACoB,SAAT,EAAT;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,KAA1B,CAAgC,MAAhC,EAAwC,IAAxC,EAA8C,KAAKjB,KAAL,CAAWQ,IAAzD,EAEKU,UAFL,CAEiBC,aAAD,IAAmB;AAC3B,WAAKZ,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAEc,aAAa,CAACC;AADX,OAAd;AAGH,KANL;AAOH;;AACDC,EAAAA,mBAAmB,CAACC,MAAD,EAAS;AACxB,QAAIR,EAAE,GAAGnB,QAAQ,CAACoB,SAAT,EAAT;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,KAA1B,CAAgC,aAAhC,EAA+C,IAA/C,EAAqDK,MAArD,EAEKJ,UAFL,CAEiBC,aAAD,IAAmB;AAC3B,WAAKZ,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAEc,aAAa,CAACC;AADX,OAAd;AAGH,KANL;AAOH;;AA/D4B;;AAkEjC,eAAevB,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport firebase from 'firebase';\r\nimport FormConsult from './FormConsult'\r\n\r\nclass FormList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAdmin: props.isAdmin\r\n        }\r\n        this.getRapportByDate = this.getRapportByDate.bind(this);\r\n    }\r\n    render() {\r\n        if (!this.state.items) {\r\n            return (\r\n                <form onSubmit={this.getRapportByDate}>\r\n                    <div>\r\n                        <label htmlFor=\"date\">Date : </label>\r\n                        <input type=\"date\" id=\"date\" name=\"date\"\r\n                            onChange={e => this.setState({ date: e.target.value })} required></input>\r\n                        <button className=\"pink_button\" type=\"submit\">Rapports</button>\r\n                    </div>\r\n\r\n                </form>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    {\r\n                        this.state.items.map((item, index) =>\r\n                            <FormConsult data={item} key={index} type=\"date\" />\r\n                        )\r\n                    }\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    /*  componentDidMount() {\r\n          let db = firebase.firestore();\r\n          db.collection(\"rapports\")\r\n  \r\n              .onSnapshot((querySnapshot) => {\r\n                  this.setState({\r\n                      items: querySnapshot.docs\r\n                  });\r\n              })\r\n      }*/\r\n    getRapportByDate() {\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\").where(\"date\", \"==\", this.state.date)\r\n\r\n            .onSnapshot((querySnapshot) => {\r\n                this.setState({\r\n                    items: querySnapshot.docs\r\n                });\r\n            })\r\n    }\r\n    getRapportsByNumber(number) {\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\").where(\"numeroTrain\", \"==\", number)\r\n\r\n            .onSnapshot((querySnapshot) => {\r\n                this.setState({\r\n                    items: querySnapshot.docs\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport default FormList;"]},"metadata":{},"sourceType":"module"}