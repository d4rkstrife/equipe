{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\equipe\\\\src\\\\FormList.js\";\nimport React, { Component, Fragment } from 'react';\nimport firebase from 'firebase';\nimport FormConsult from './FormConsult';\n\nclass FormList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdmin: props.isAdmin\n    };\n  }\n\n  render() {\n    if (!this.state.items) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, \"Chargement\");\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, this.state.items.map((item, index) => /*#__PURE__*/React.createElement(FormConsult, {\n        data: item,\n        key: index,\n        type: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      })));\n    }\n  }\n\n  componentDidMount() {\n    let db = firebase.firestore();\n    db.collection(\"rapports\").onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs\n      });\n    });\n  }\n\n  getRapportByDate(date) {\n    let db = firebase.firestore();\n    db.collection(\"rapports\").where(\"date\", \"==\", date).onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs\n      });\n    });\n  }\n\n}\n\nexport default FormList;","map":{"version":3,"sources":["C:/Users/pgdc8/Desktop/equipe/src/FormList.js"],"names":["React","Component","Fragment","firebase","FormConsult","FormList","constructor","props","state","isAdmin","render","items","map","item","index","componentDidMount","db","firestore","collection","onSnapshot","querySnapshot","setState","docs","getRapportByDate","date","where"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEF,KAAK,CAACE;AADN,KAAb;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKF,KAAL,CAAWG,KAAhB,EAAuB;AACnB,0BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH,KAJD,MAIO;AACH,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKH,KAAL,CAAWG,KAAX,CAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACjB,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAED,IAAnB;AAAyB,QAAA,GAAG,EAAEC,KAA9B;AAAqC,QAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFR,CADJ;AASH;AACJ;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,EAAE,GAAGb,QAAQ,CAACc,SAAT,EAAT;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,UAAd,EAEKC,UAFL,CAEiBC,aAAD,IAAmB;AAC3B,WAAKC,QAAL,CAAc;AACVV,QAAAA,KAAK,EAAES,aAAa,CAACE;AADX,OAAd;AAGH,KANL;AAOH;;AACDC,EAAAA,gBAAgB,CAACC,IAAD,EAAO;AACnB,QAAIR,EAAE,GAAGb,QAAQ,CAACc,SAAT,EAAT;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BO,KAA1B,CAAgC,MAAhC,EAAwC,IAAxC,EAA8CD,IAA9C,EAEKL,UAFL,CAEiBC,aAAD,IAAmB;AAC3B,WAAKC,QAAL,CAAc;AACVV,QAAAA,KAAK,EAAES,aAAa,CAACE;AADX,OAAd;AAGH,KANL;AAOH;;AA5C4B;;AA+CjC,eAAejB,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport firebase from 'firebase';\r\nimport FormConsult from './FormConsult'\r\n\r\nclass FormList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAdmin: props.isAdmin\r\n        }\r\n    }\r\n    render() {\r\n        if (!this.state.items) {\r\n            return (\r\n                <p>Chargement</p>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    {\r\n                        this.state.items.map((item, index) =>\r\n                            <FormConsult data={item} key={index} type=\"date\" />\r\n                        )\r\n                    }\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\")\r\n\r\n            .onSnapshot((querySnapshot) => {\r\n                this.setState({\r\n                    items: querySnapshot.docs\r\n                });\r\n            })\r\n    }\r\n    getRapportByDate(date) {\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\").where(\"date\", \"==\", date)\r\n\r\n            .onSnapshot((querySnapshot) => {\r\n                this.setState({\r\n                    items: querySnapshot.docs\r\n                });\r\n            })\r\n    }\r\n}\r\n\r\nexport default FormList;"]},"metadata":{},"sourceType":"module"}