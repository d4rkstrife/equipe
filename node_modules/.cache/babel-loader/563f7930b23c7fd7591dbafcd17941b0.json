{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\my-app\\\\src\\\\Train.js\";\nimport React, { Component, Fragment } from 'react';\nimport TrainDetails from './TrainDetails';\nimport firebase from 'firebase';\n\nclass Train extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n  }\n\n  render() {\n    if (this.state.data === null) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 17\n        }\n      }, \"Chargement des trains\");\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }\n      }, this.state.data.departures.map((item, index) => /*#__PURE__*/React.createElement(TrainDetails, {\n        key: index,\n        item: item,\n        index: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }\n      })));\n    }\n  }\n\n  addTrain(item) {\n    console.log(item);\n  }\n\n  componentDidMount() {\n    let d = new Date();\n    let year = this.formatDate(d.getFullYear());\n    let month = this.formatDate(d.getMonth() + 1);\n    let day = this.formatDate(d.getDate());\n    let hour = this.formatDate(d.getHours());\n    let minute = this.formatDate(d.getMinutes());\n    let second = this.formatDate(d.getSeconds());\n    let date = `${year}${month}${day}${hour}${minute}${second}`;\n    fetch(`https://api.navitia.io/v1/coverage/fr-se/stop_areas/${this.props.data}/departures?from_datetime=${date}&key=0a6f65c0-c3be-4fe3-a8e5-9aac523d5be7`).then(reponse => reponse.json()).then(data => this.setState({\n      data\n    }));\n    let db = firebase.firestore();\n    db.collection(\"train\").get().then(querySnapshot => {\n      let trainList = Object.entries(querySnapshot);\n      this.setState({\n        trainList: trainList\n      });\n      querySnapshot.forEach(doc => {\n        console.log(this.state.trainList);\n      });\n    });\n  }\n\n  formatDate(number) {\n    if (number < 10) {\n      number = \"0\" + number.toString();\n    } else {\n      number = number.toString();\n    }\n\n    return number;\n  }\n\n}\n\nexport default Train;","map":{"version":3,"sources":["C:/Users/pgdc8/Desktop/my-app/src/Train.js"],"names":["React","Component","Fragment","TrainDetails","firebase","Train","constructor","props","state","data","render","departures","map","item","index","addTrain","console","log","componentDidMount","d","Date","year","formatDate","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","date","fetch","then","reponse","json","setState","db","firestore","collection","get","querySnapshot","trainList","Object","entries","forEach","doc","number","toString"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport TrainDetails from './TrainDetails';\r\nimport firebase from 'firebase';\r\n\r\n\r\nclass Train extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n        };\r\n    }\r\n    render() {\r\n        if (this.state.data === null) {\r\n            return (\r\n                <p>Chargement des trains</p>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    {\r\n                        this.state.data.departures.map((item, index) =>\r\n                            <TrainDetails key={index} item={item} index={index} />\r\n                        )\r\n                    }\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n    }\r\n\r\n    addTrain(item) {\r\n        console.log(item)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let d = new Date();\r\n        let year = this.formatDate(d.getFullYear());\r\n        let month = this.formatDate(d.getMonth() + 1);\r\n        let day = this.formatDate(d.getDate());\r\n        let hour = this.formatDate(d.getHours());\r\n        let minute = this.formatDate(d.getMinutes());\r\n        let second = this.formatDate(d.getSeconds());\r\n\r\n        let date = `${year}${month}${day}${hour}${minute}${second}`\r\n        fetch(`https://api.navitia.io/v1/coverage/fr-se/stop_areas/${this.props.data}/departures?from_datetime=${date}&key=0a6f65c0-c3be-4fe3-a8e5-9aac523d5be7`)\r\n            .then(reponse => reponse.json())\r\n            .then(data => this.setState({ data }));\r\n        let db = firebase.firestore();\r\n        db.collection(\"train\").get().then((querySnapshot) => {\r\n            let trainList = Object.entries(querySnapshot)\r\n            this.setState({ trainList: trainList })\r\n            querySnapshot.forEach((doc) => {\r\n                console.log(this.state.trainList);\r\n            });\r\n        });\r\n    }\r\n    formatDate(number) {\r\n        if (number < 10) {\r\n            number = \"0\" + number.toString();\r\n        } else {\r\n            number = number.toString();\r\n        }\r\n        return number;\r\n    }\r\n}\r\n\r\nexport default Train;"]},"metadata":{},"sourceType":"module"}