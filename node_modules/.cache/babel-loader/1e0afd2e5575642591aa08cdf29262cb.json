{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\my-app\\\\src\\\\Train.js\";\nimport React, { Component, Fragment } from 'react';\n\nclass Train extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n  }\n\n  render() {\n    if (this.state.data === null) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }\n      }, \"Chargement des trains\");\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, this.state.data.departures.map((item, index) => /*#__PURE__*/React.createElement(\"div\", {\n        key: index,\n        className: \"trainElt\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 33\n        }\n      }, item.display_informations.headsign), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }\n      }, item.display_informations.direction), /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }\n      }, this.formatHour(item.stop_date_time.departure_date_time)))));\n    }\n  }\n\n  formatHour(data) {\n    let date = data;\n    let time = date.toString().slice(-6, -2);\n    let exactTime = time.slice(0, 2) + \":\" + time.slice(2, 4);\n    return exactTime;\n  }\n\n  componentDidMount() {\n    let d = new Date();\n    let year = this.formatDate(d.getFullYear());\n    let month = this.formatDate(d.getMonth() + 1);\n    let day = this.formatDate(d.getDate());\n    let hour = this.formatDate(d.getHours());\n    let minute = this.formatDate(d.getMinutes());\n    let second = this.formatDate(d.getSeconds());\n    let date = `${year}${month}${day}${hour}${minute}${second}`;\n    fetch(`https://api.navitia.io/v1/coverage/fr-se/stop_areas/${this.props.data}/departures?from_datetime=${date}&key=0a6f65c0-c3be-4fe3-a8e5-9aac523d5be7`).then(reponse => reponse.json()).then(data => this.setState({\n      data\n    }));\n  }\n\n  formatDate(number) {\n    if (number < 10) {\n      number = \"0\" + number.toString();\n    } else {\n      number = number.toString();\n    }\n\n    return number;\n  }\n\n}\n\nexport default Train;","map":{"version":3,"sources":["C:/Users/pgdc8/Desktop/my-app/src/Train.js"],"names":["React","Component","Fragment","Train","constructor","props","state","data","render","departures","map","item","index","display_informations","headsign","direction","formatHour","stop_date_time","departure_date_time","date","time","toString","slice","exactTime","componentDidMount","d","Date","year","formatDate","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","fetch","then","reponse","json","setState","number"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\n\r\n\r\nclass Train extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n        };\r\n    }\r\n    render() {\r\n        if (this.state.data === null) {\r\n            return (\r\n                <p>Chargement des trains</p>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    {\r\n                        this.state.data.departures.map((item, index) =>\r\n                            <div key={index} className='trainElt'>\r\n                                <p>{item.display_informations.headsign}</p>\r\n                                <p>{item.display_informations.direction}</p>\r\n                                <p>{this.formatHour(item.stop_date_time.departure_date_time)}</p>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </Fragment>\r\n            )\r\n        }\r\n\r\n    }\r\n    formatHour(data) {\r\n        let date = data;\r\n        let time = date.toString().slice(-6, -2);\r\n        let exactTime = time.slice(0, 2) + \":\" + time.slice(2, 4);\r\n        return exactTime\r\n    }\r\n\r\n    componentDidMount() {\r\n        let d = new Date();\r\n        let year = this.formatDate(d.getFullYear());\r\n        let month = this.formatDate(d.getMonth() + 1);\r\n        let day = this.formatDate(d.getDate());\r\n        let hour = this.formatDate(d.getHours());\r\n        let minute = this.formatDate(d.getMinutes());\r\n        let second = this.formatDate(d.getSeconds());\r\n\r\n        let date = `${year}${month}${day}${hour}${minute}${second}`\r\n        fetch(`https://api.navitia.io/v1/coverage/fr-se/stop_areas/${this.props.data}/departures?from_datetime=${date}&key=0a6f65c0-c3be-4fe3-a8e5-9aac523d5be7`)\r\n            .then(reponse => reponse.json())\r\n            .then(data => this.setState({ data }));\r\n    }\r\n    formatDate(number) {\r\n        if (number < 10) {\r\n            number = \"0\" + number.toString();\r\n        } else {\r\n            number = number.toString();\r\n        }\r\n        return number;\r\n    }\r\n}\r\n\r\nexport default Train;"]},"metadata":{},"sourceType":"module"}