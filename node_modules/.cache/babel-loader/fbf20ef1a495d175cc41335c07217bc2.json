{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\equipe\\\\src\\\\FormList.js\";\nimport React, { Component, Fragment } from 'react';\nimport firebase from 'firebase';\nimport FormConsult from './FormConsult';\n\nclass FormList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdmin: props.isAdmin,\n      date: null,\n      number: null\n    };\n    this.getRapportsByDate = this.getRapportsByDate.bind(this);\n    this.getRapportsByNumber = this.getRapportsByNumber.bind(this);\n  }\n\n  render() {\n    if (!this.state.items) {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 21\n        }\n      }, \"Rechercher les rapports\"), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.getRapportsByDate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 29\n        }\n      }, \"Date : \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"date\",\n        id: \"date\",\n        name: \"date\",\n        onChange: e => this.setState({\n          date: e.target.value\n        }),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"pink_button\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 29\n        }\n      }, \"Rapports\"))), /*#__PURE__*/React.createElement(\"form\", {\n        onSubmit: this.getRapportsByNumber,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        htmlFor: \"numero\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 29\n        }\n      }, \"N\\xB0 Train : \"), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"number\",\n        id: \"number\",\n        name: \"number\",\n        onChange: e => this.setState({\n          number: e.target.value\n        }),\n        required: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"pink_button\",\n        type: \"submit\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 29\n        }\n      }, \"Rapports\"))));\n    } else if (this.state.type === \"date\") {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }\n      }, this.state.items.map((item, index) => /*#__PURE__*/React.createElement(FormConsult, {\n        data: item,\n        key: index,\n        type: \"date\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"pink_button\",\n        type: \"submit\",\n        onClick: resetState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }\n      }, \"RAZ\"));\n    } else {\n      return /*#__PURE__*/React.createElement(Fragment, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 17\n        }\n      }, this.state.items.map((item, index) => /*#__PURE__*/React.createElement(FormConsult, {\n        data: item,\n        key: index,\n        type: \"number\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 29\n        }\n      })), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"pink_button\",\n        type: \"submit\",\n        onClick: resetState,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }\n      }, \"RAZ\"));\n    }\n  }\n\n  getRapportsByDate(event) {\n    event.preventDefault();\n    let db = firebase.firestore();\n    db.collection(\"rapports\").where(\"data.date\", \"==\", this.state.date).onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs,\n        type: \"date\"\n      });\n    });\n  }\n\n  getRapportsByNumber(event) {\n    event.preventDefault();\n    let db = firebase.firestore();\n    db.collection(\"rapports\").where(\"data.numeroTrain\", \"==\", this.state.number).onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs,\n        type: \"number\"\n      });\n    });\n  }\n\n  resetState() {\n    this.setState({\n      items: null,\n      type: null,\n      date: null,\n      number: null\n    });\n  }\n\n}\n\nexport default FormList;","map":{"version":3,"sources":["C:/Users/pgdc8/Desktop/equipe/src/FormList.js"],"names":["React","Component","Fragment","firebase","FormConsult","FormList","constructor","props","state","isAdmin","date","number","getRapportsByDate","bind","getRapportsByNumber","render","items","e","setState","target","value","type","map","item","index","resetState","event","preventDefault","db","firestore","collection","where","onSnapshot","querySnapshot","docs"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,QAAP,MAAqB,UAArB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAEA,MAAMC,QAAN,SAAuBJ,SAAvB,CAAiC;AAC7BK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAEF,KAAK,CAACE,OADN;AAETC,MAAAA,IAAI,EAAE,IAFG;AAGTC,MAAAA,MAAM,EAAE;AAHC,KAAb;AAKA,SAAKC,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBC,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKC,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBD,IAAzB,CAA8B,IAA9B,CAA3B;AACH;;AACDE,EAAAA,MAAM,GAAG;AACL,QAAI,CAAC,KAAKP,KAAL,CAAWQ,KAAhB,EAAuB;AACnB,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCADJ,eAEI;AAAM,QAAA,QAAQ,EAAE,KAAKJ,iBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,MAAtB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AACI,QAAA,QAAQ,EAAEK,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAER,UAAAA,IAAI,EAAEO,CAAC,CAACE,MAAF,CAASC;AAAjB,SAAd,CADnB;AAC4D,QAAA,QAAQ,MADpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAII;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ,CAFJ,eAWI;AAAM,QAAA,QAAQ,EAAE,KAAKN,mBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI;AAAO,QAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,EAAE,EAAC,QAAxB;AAAiC,QAAA,IAAI,EAAC,QAAtC;AACI,QAAA,QAAQ,EAAEG,CAAC,IAAI,KAAKC,QAAL,CAAc;AAAEP,UAAAA,MAAM,EAAEM,CAAC,CAACE,MAAF,CAASC;AAAnB,SAAd,CADnB;AAC8D,QAAA,QAAQ,MADtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,eAII;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,CADJ,CAXJ,CADJ;AAwBH,KAzBD,MAyBO,IAAI,KAAKZ,KAAL,CAAWa,IAAX,KAAoB,MAAxB,EAAgC;AACnC,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKb,KAAL,CAAWQ,KAAX,CAAiBM,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACjB,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAED,IAAnB;AAAyB,QAAA,GAAG,EAAEC,KAA9B;AAAqC,QAAA,IAAI,EAAC,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFR,eAMI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAA8C,QAAA,OAAO,EAAEC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CADJ;AAUH,KAXM,MAWA;AACH,0BACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKjB,KAAL,CAAWQ,KAAX,CAAiBM,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,kBACjB,oBAAC,WAAD;AAAa,QAAA,IAAI,EAAED,IAAnB;AAAyB,QAAA,GAAG,EAAEC,KAA9B;AAAqC,QAAA,IAAI,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAFR,eAMI;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAgC,QAAA,IAAI,EAAC,QAArC;AAA8C,QAAA,OAAO,EAAEC,UAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eANJ,CADJ;AAUH;AACJ;;AAEDb,EAAAA,iBAAiB,CAACc,KAAD,EAAQ;AACrBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,EAAE,GAAGzB,QAAQ,CAAC0B,SAAT,EAAT;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,KAA1B,CAAgC,WAAhC,EAA6C,IAA7C,EAAmD,KAAKvB,KAAL,CAAWE,IAA9D,EAEKsB,UAFL,CAEiBC,aAAD,IAAmB;AAC3B,WAAKf,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAEiB,aAAa,CAACC,IADX;AAEVb,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIH,KAPL;AAQH;;AACDP,EAAAA,mBAAmB,CAACY,KAAD,EAAQ;AACvBA,IAAAA,KAAK,CAACC,cAAN;AACA,QAAIC,EAAE,GAAGzB,QAAQ,CAAC0B,SAAT,EAAT;AACAD,IAAAA,EAAE,CAACE,UAAH,CAAc,UAAd,EAA0BC,KAA1B,CAAgC,kBAAhC,EAAoD,IAApD,EAA0D,KAAKvB,KAAL,CAAWG,MAArE,EAEKqB,UAFL,CAEiBC,aAAD,IAAmB;AAC3B,WAAKf,QAAL,CAAc;AACVF,QAAAA,KAAK,EAAEiB,aAAa,CAACC,IADX;AAEVb,QAAAA,IAAI,EAAE;AAFI,OAAd;AAIH,KAPL;AAQH;;AACDI,EAAAA,UAAU,GAAG;AACT,SAAKP,QAAL,CAAc;AAAEF,MAAAA,KAAK,EAAE,IAAT;AAAeK,MAAAA,IAAI,EAAE,IAArB;AAA2BX,MAAAA,IAAI,EAAE,IAAjC;AAAuCC,MAAAA,MAAM,EAAE;AAA/C,KAAd;AACH;;AAxF4B;;AA2FjC,eAAeN,QAAf","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport firebase from 'firebase';\r\nimport FormConsult from './FormConsult'\r\n\r\nclass FormList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAdmin: props.isAdmin,\r\n            date: null,\r\n            number: null\r\n        }\r\n        this.getRapportsByDate = this.getRapportsByDate.bind(this);\r\n        this.getRapportsByNumber = this.getRapportsByNumber.bind(this);\r\n    }\r\n    render() {\r\n        if (!this.state.items) {\r\n            return (\r\n                <Fragment>\r\n                    <h3>Rechercher les rapports</h3>\r\n                    <form onSubmit={this.getRapportsByDate}>\r\n                        <div>\r\n                            <label htmlFor=\"date\">Date : </label>\r\n                            <input type=\"date\" id=\"date\" name=\"date\"\r\n                                onChange={e => this.setState({ date: e.target.value })} required></input>\r\n                            <button className=\"pink_button\" type=\"submit\">Rapports</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                    <form onSubmit={this.getRapportsByNumber}>\r\n                        <div>\r\n                            <label htmlFor=\"numero\">N° Train : </label>\r\n                            <input type=\"number\" id=\"number\" name=\"number\"\r\n                                onChange={e => this.setState({ number: e.target.value })} required></input>\r\n                            <button className=\"pink_button\" type=\"submit\">Rapports</button>\r\n                        </div>\r\n\r\n                    </form>\r\n                </Fragment>\r\n\r\n            )\r\n        } else if (this.state.type === \"date\") {\r\n            return (\r\n                <Fragment>\r\n                    {\r\n                        this.state.items.map((item, index) =>\r\n                            <FormConsult data={item} key={index} type=\"date\" />\r\n                        )\r\n                    }\r\n                    <button className=\"pink_button\" type=\"submit\" onClick={resetState}>RAZ</button>\r\n                </Fragment>\r\n            )\r\n        } else {\r\n            return (\r\n                <Fragment>\r\n                    {\r\n                        this.state.items.map((item, index) =>\r\n                            <FormConsult data={item} key={index} type=\"number\" />\r\n                        )\r\n                    }\r\n                    <button className=\"pink_button\" type=\"submit\" onClick={resetState}>RAZ</button>\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n\r\n    getRapportsByDate(event) {\r\n        event.preventDefault();\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\").where(\"data.date\", \"==\", this.state.date)\r\n\r\n            .onSnapshot((querySnapshot) => {\r\n                this.setState({\r\n                    items: querySnapshot.docs,\r\n                    type: \"date\"\r\n                });\r\n            })\r\n    }\r\n    getRapportsByNumber(event) {\r\n        event.preventDefault();\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\").where(\"data.numeroTrain\", \"==\", this.state.number)\r\n\r\n            .onSnapshot((querySnapshot) => {\r\n                this.setState({\r\n                    items: querySnapshot.docs,\r\n                    type: \"number\"\r\n                });\r\n            })\r\n    }\r\n    resetState() {\r\n        this.setState({ items: null, type: null, date: null, number: null })\r\n    }\r\n}\r\n\r\nexport default FormList;"]},"metadata":{},"sourceType":"module"}