{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pgdc8\\\\OneDrive\\\\Bureau\\\\projet\\\\gare\\\\equipe\\\\src\\\\FormList.js\";\nimport React, { Component, Fragment } from 'react';\nimport firebase from 'firebase';\nimport FormConsult from './FormConsult';\n\nclass FormList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdmin: props.isAdmin,\n      date: null,\n      number: null\n    };\n    this.getRapportsByDate = this.getRapportsByDate.bind(this);\n    this.getRapportsByNumber = this.getRapportsByNumber.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  render() {\n    if (this.state.isAdmin) {\n      if (!this.state.items) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 26\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }\n        }, \" Rechercher les rapports \"), \" \", /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: this.getRapportsByDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 57\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 21\n          }\n        }, \" Date: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          onChange: e => this.setState({\n            date: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 62\n          }\n        }, \" \"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n          className: \"pink_button\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 42\n          }\n        }, \" Rapports \"), \" \")), \" \", /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: this.getRapportsByNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 28\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"numero\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 21\n          }\n        }, \" N\\xB0 Train: \"), \" \", /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          id: \"number\",\n          name: \"number\",\n          onChange: e => this.setState({\n            number: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 68\n          }\n        }, \" \"), \" \", /*#__PURE__*/React.createElement(\"button\", {\n          className: \"pink_button\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 42\n          }\n        }, \" Rapports \"), \" \")), \" \");\n      } else if (this.state.type === \"date\") {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 26\n          }\n        }, \" \", this.state.items.map((item, index) => /*#__PURE__*/React.createElement(FormConsult, {\n          data: item,\n          key: index,\n          type: \"date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }\n        })), \" \", /*#__PURE__*/React.createElement(\"button\", {\n          className: \"pink_button\",\n          id: \"reset-button\",\n          type: \"submit\",\n          onClick: this.resetState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 23\n          }\n        }, \" RAZ \"), \" \");\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 26\n          }\n        }, \" \", this.state.items.map((item, index) => /*#__PURE__*/React.createElement(FormConsult, {\n          data: item,\n          key: index,\n          type: \"number\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }\n        })), \" \", /*#__PURE__*/React.createElement(\"button\", {\n          className: \"pink_button\",\n          id: \"reset-button\",\n          type: \"submit\",\n          onClick: this.resetState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 23\n          }\n        }, \" RAZ \"), \" \");\n      }\n    } else {\n      /*#__PURE__*/\n      React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 18\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }\n      }, \" Acc\\xE8s \\xE0 cette page non autoris\\xE9 \"), \" \");\n    }\n  }\n\n  getRapportsByDate(event) {\n    event.preventDefault();\n    let db = firebase.firestore();\n    db.collection(\"rapports\").where(\"data.date\", \"==\", this.state.date).onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs,\n        type: \"date\"\n      });\n    });\n  }\n\n  getRapportsByNumber(event) {\n    event.preventDefault();\n    let db = firebase.firestore();\n    db.collection(\"rapports\").where(\"data.numeroTrain\", \"==\", this.state.number).onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs,\n        type: \"number\"\n      });\n    });\n  }\n\n  resetState() {\n    this.setState({\n      items: null,\n      type: null,\n      date: null,\n      number: null\n    });\n  }\n\n  componentWillUnmount() {\n    this.resetState();\n  }\n\n}\n\nexport default FormList;","map":{"version":3,"sources":["C:/Users/pgdc8/OneDrive/Bureau/projet/gare/equipe/src/FormList.js"],"names":["React","Component","Fragment","firebase","FormConsult","FormList","constructor","props","state","isAdmin","date","number","getRapportsByDate","bind","getRapportsByNumber","resetState","render","items","e","setState","target","value","type","map","item","index","event","preventDefault","db","firestore","collection","where","onSnapshot","querySnapshot","docs","componentWillUnmount"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport firebase from 'firebase';\r\nimport FormConsult from './FormConsult'\r\n\r\nclass FormList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAdmin: props.isAdmin,\r\n            date: null,\r\n            number: null\r\n        }\r\n        this.getRapportsByDate = this.getRapportsByDate.bind(this);\r\n        this.getRapportsByNumber = this.getRapportsByNumber.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n    }\r\n    render() {\r\n        if (this.state.isAdmin) {\r\n            if (!this.state.items) {\r\n                return ( <\r\n                    Fragment >\r\n                    <\r\n                    h3 > Rechercher les rapports < /h3> <\r\n                    form onSubmit = { this.getRapportsByDate } >\r\n                    <\r\n                    div >\r\n                    <\r\n                    label htmlFor = \"date\" > Date: < /label> <\r\n                    input type = \"date\"\r\n                    id = \"date\"\r\n                    name = \"date\"\r\n                    onChange = { e => this.setState({ date: e.target.value }) }\r\n                    required > < /input> <\r\n                    button className = \"pink_button\"\r\n                    type = \"submit\" > Rapports < /button> <\r\n                    /div>\r\n\r\n                    <\r\n                    /form> <\r\n                    form onSubmit = { this.getRapportsByNumber } >\r\n                    <\r\n                    div >\r\n                    <\r\n                    label htmlFor = \"numero\" > N° Train: < /label> <\r\n                    input type = \"number\"\r\n                    id = \"number\"\r\n                    name = \"number\"\r\n                    onChange = { e => this.setState({ number: e.target.value }) }\r\n                    required > < /input> <\r\n                    button className = \"pink_button\"\r\n                    type = \"submit\" > Rapports < /button> <\r\n                    /div>\r\n\r\n                    <\r\n                    /form> <\r\n                    /Fragment>\r\n\r\n                )\r\n            } else if (this.state.type === \"date\") {\r\n                return ( <\r\n                    Fragment > {\r\n                        this.state.items.map((item, index) =>\r\n                            <\r\n                            FormConsult data = { item }\r\n                            key = { index }\r\n                            type = \"date\" / >\r\n                        )\r\n                    } <\r\n                    button className = \"pink_button\"\r\n                    id = \"reset-button\"\r\n                    type = \"submit\"\r\n                    onClick = { this.resetState } > RAZ < /button> <\r\n                    /Fragment>\r\n                )\r\n            } else {\r\n                return ( <\r\n                    Fragment > {\r\n                        this.state.items.map((item, index) =>\r\n                            <\r\n                            FormConsult data = { item }\r\n                            key = { index }\r\n                            type = \"number\" / >\r\n                        )\r\n                    } <\r\n                    button className = \"pink_button\"\r\n                    id = \"reset-button\"\r\n                    type = \"submit\"\r\n                    onClick = { this.resetState } > RAZ < /button> <\r\n                    /Fragment>\r\n                )\r\n            }\r\n        } else { <\r\n            div >\r\n                <\r\n                p > Accès à cette page non autorisé < /p> <\r\n                /div>\r\n        }\r\n\r\n    }\r\n\r\n    getRapportsByDate(event) {\r\n        event.preventDefault();\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\").where(\"data.date\", \"==\", this.state.date)\r\n\r\n        .onSnapshot((querySnapshot) => {\r\n            this.setState({\r\n                items: querySnapshot.docs,\r\n                type: \"date\"\r\n            });\r\n        })\r\n    }\r\n    getRapportsByNumber(event) {\r\n        event.preventDefault();\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\").where(\"data.numeroTrain\", \"==\", this.state.number)\r\n\r\n        .onSnapshot((querySnapshot) => {\r\n            this.setState({\r\n                items: querySnapshot.docs,\r\n                type: \"number\"\r\n            });\r\n        })\r\n    }\r\n    resetState() {\r\n        this.setState({ items: null, type: null, date: null, number: null })\r\n    }\r\n    componentWillUnmount() {\r\n        this.resetState();\r\n    }\r\n}\r\n\r\nexport default FormList;"]},"metadata":{},"sourceType":"module"}