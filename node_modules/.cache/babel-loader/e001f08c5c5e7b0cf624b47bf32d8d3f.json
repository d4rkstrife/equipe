{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pgdc8\\\\Desktop\\\\my-app\\\\src\\\\ListeTrain.js\";\nimport React, { Component } from 'react';\nimport Train from './Train';\n\nclass ListeTrain extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Train, {\n      key: this.state.data,\n      data: JSON.parse(this.state.data),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }\n    });\n  }\n\n  componentDidMount() {\n    let d = new Date();\n    let year = this.formatDate(d.getFullYear());\n    let month = this.formatDate(d.getMonth() + 1);\n    let day = this.formatDate(d.getDate());\n    let hour = this.formatDate(d.getHours());\n    let minute = this.formatDate(d.getMinutes());\n    let second = this.formatDate(d.getSeconds());\n    let date = `${year}${month}${day}${hour}${minute}${second}`;\n    fetch(`https://api.navitia.io/v1/coverage/fr-se/stop_areas/${this.props.data}/departures?from_datetime=${date}&key=0a6f65c0-c3be-4fe3-a8e5-9aac523d5be7`).then(reponse => reponse.json()).then(data => this.setState({\n      data\n    }));\n  }\n\n  formatDate(number) {\n    if (number < 10) {\n      number = \"0\" + number.toString();\n    } else {\n      number = number.toString();\n    }\n\n    return number;\n  }\n\n}\n\nexport default ListeTrain;","map":{"version":3,"sources":["C:/Users/pgdc8/Desktop/my-app/src/ListeTrain.js"],"names":["React","Component","Train","ListeTrain","constructor","props","state","data","render","JSON","parse","componentDidMount","d","Date","year","formatDate","getFullYear","month","getMonth","day","getDate","hour","getHours","minute","getMinutes","second","getSeconds","date","fetch","then","reponse","json","setState","number","toString"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAC/BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAGH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,KAAD;AAAO,MAAA,GAAG,EAAE,KAAKF,KAAL,CAAWC,IAAvB;AAA6B,MAAA,IAAI,EAAEE,IAAI,CAACC,KAAL,CAAW,KAAKJ,KAAL,CAAWC,IAAtB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH;;AACDI,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,CAAC,GAAG,IAAIC,IAAJ,EAAR;AACA,QAAIC,IAAI,GAAG,KAAKC,UAAL,CAAgBH,CAAC,CAACI,WAAF,EAAhB,CAAX;AACA,QAAIC,KAAK,GAAG,KAAKF,UAAL,CAAgBH,CAAC,CAACM,QAAF,KAAe,CAA/B,CAAZ;AACA,QAAIC,GAAG,GAAG,KAAKJ,UAAL,CAAgBH,CAAC,CAACQ,OAAF,EAAhB,CAAV;AACA,QAAIC,IAAI,GAAG,KAAKN,UAAL,CAAgBH,CAAC,CAACU,QAAF,EAAhB,CAAX;AACA,QAAIC,MAAM,GAAG,KAAKR,UAAL,CAAgBH,CAAC,CAACY,UAAF,EAAhB,CAAb;AACA,QAAIC,MAAM,GAAG,KAAKV,UAAL,CAAgBH,CAAC,CAACc,UAAF,EAAhB,CAAb;AAEA,QAAIC,IAAI,GAAI,GAAEb,IAAK,GAAEG,KAAM,GAAEE,GAAI,GAAEE,IAAK,GAAEE,MAAO,GAAEE,MAAO,EAA1D;AACAG,IAAAA,KAAK,CAAE,uDAAsD,KAAKvB,KAAL,CAAWE,IAAK,6BAA4BoB,IAAK,2CAAzG,CAAL,CACKE,IADL,CACUC,OAAO,IAAIA,OAAO,CAACC,IAAR,EADrB,EAEKF,IAFL,CAEUtB,IAAI,IAAI,KAAKyB,QAAL,CAAc;AAAEzB,MAAAA;AAAF,KAAd,CAFlB;AAGH;;AACDQ,EAAAA,UAAU,CAACkB,MAAD,EAAS;AACf,QAAIA,MAAM,GAAG,EAAb,EAAiB;AACbA,MAAAA,MAAM,GAAG,MAAMA,MAAM,CAACC,QAAP,EAAf;AACH,KAFD,MAEO;AACHD,MAAAA,MAAM,GAAGA,MAAM,CAACC,QAAP,EAAT;AACH;;AACD,WAAOD,MAAP;AACH;;AAlC8B;;AAqCnC,eAAe9B,UAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport Train from './Train';\r\n\r\nclass ListeTrain extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            data: null,\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <Train key={this.state.data} data={JSON.parse(this.state.data)} />\r\n        );\r\n    }\r\n    componentDidMount() {\r\n        let d = new Date();\r\n        let year = this.formatDate(d.getFullYear());\r\n        let month = this.formatDate(d.getMonth() + 1);\r\n        let day = this.formatDate(d.getDate());\r\n        let hour = this.formatDate(d.getHours());\r\n        let minute = this.formatDate(d.getMinutes());\r\n        let second = this.formatDate(d.getSeconds());\r\n\r\n        let date = `${year}${month}${day}${hour}${minute}${second}`\r\n        fetch(`https://api.navitia.io/v1/coverage/fr-se/stop_areas/${this.props.data}/departures?from_datetime=${date}&key=0a6f65c0-c3be-4fe3-a8e5-9aac523d5be7`)\r\n            .then(reponse => reponse.json())\r\n            .then(data => this.setState({ data }));\r\n    }\r\n    formatDate(number) {\r\n        if (number < 10) {\r\n            number = \"0\" + number.toString();\r\n        } else {\r\n            number = number.toString();\r\n        }\r\n        return number;\r\n    }\r\n}\r\n\r\nexport default ListeTrain;\r\n"]},"metadata":{},"sourceType":"module"}