{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pgdc8\\\\OneDrive\\\\Bureau\\\\projet\\\\gare\\\\equipe\\\\src\\\\FormList.js\";\nimport React, { Component, Fragment } from 'react';\nimport firebase from 'firebase';\nimport FormConsult from './FormConsult';\n\nclass FormList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAdmin: props.isAdmin,\n      date: null,\n      number: null\n    };\n    this.getRapportsByDate = this.getRapportsByDate.bind(this);\n    this.getRapportsByNumber = this.getRapportsByNumber.bind(this);\n    this.getRapportsByUser = this.getRapportsByUser.bind(this);\n    this.resetState = this.resetState.bind(this);\n  }\n\n  render() {\n    if (this.state.isAdmin) {\n      if (!this.state.items) {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }\n        }, \"Rechercher les rapports\"), /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: this.getRapportsByDate,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 33\n          }\n        }, \"Date : \"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"date\",\n          id: \"date\",\n          name: \"date\",\n          onChange: e => this.setState({\n            date: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"pink_button\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }\n        }, \"Rapports\"))), /*#__PURE__*/React.createElement(\"form\", {\n          onSubmit: this.getRapportsByNumber,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(\"label\", {\n          htmlFor: \"numero\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 33\n          }\n        }, \"N\\xB0 Train : \"), /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          id: \"number\",\n          name: \"number\",\n          onChange: e => this.setState({\n            number: e.target.value\n          }),\n          required: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 33\n          }\n        }), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"pink_button\",\n          type: \"submit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 33\n          }\n        }, \"Rapports\"))));\n      } else if (this.state.type === \"date\") {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 21\n          }\n        }, this.state.items.map((item, index) => /*#__PURE__*/React.createElement(FormConsult, {\n          data: item,\n          key: index,\n          type: \"date\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"pink_button\",\n          id: \"reset-button\",\n          type: \"submit\",\n          onClick: this.resetState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }\n        }, \"RAZ\"));\n      } else {\n        return /*#__PURE__*/React.createElement(Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 21\n          }\n        }, this.state.items.map((item, index) => /*#__PURE__*/React.createElement(FormConsult, {\n          data: item,\n          key: index,\n          type: \"number\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 33\n          }\n        })), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"pink_button\",\n          id: \"reset-button\",\n          type: \"submit\",\n          onClick: this.resetState,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }\n        }, \"RAZ\"));\n      }\n    } else {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }\n      }, \"Acc\\xE8s \\xE0 cette page non autoris\\xE9\"));\n    }\n  }\n\n  getRapportsByUser() {\n    let db = firebase.firestore();\n    db.collection('rapports').where('user', \"===\", firebase.auth().currentUser.name);\n  }\n\n  getRapportsByDate(event) {\n    event.preventDefault();\n    let db = firebase.firestore();\n    db.collection(\"rapports\").where(\"data.date\", \"==\", this.state.date).onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs,\n        type: \"date\"\n      });\n    });\n  }\n\n  getRapportsByNumber(event) {\n    event.preventDefault();\n    let db = firebase.firestore();\n    db.collection(\"rapports\").where(\"data.numeroTrain\", \"==\", this.state.number).onSnapshot(querySnapshot => {\n      this.setState({\n        items: querySnapshot.docs,\n        type: \"number\"\n      });\n    });\n  }\n\n  resetState() {\n    this.setState({\n      items: null,\n      type: null,\n      date: null,\n      number: null\n    });\n  }\n\n  componentWillUnmount() {\n    this.resetState();\n  }\n\n}\n\nexport default FormList;","map":{"version":3,"sources":["C:/Users/pgdc8/OneDrive/Bureau/projet/gare/equipe/src/FormList.js"],"names":["React","Component","Fragment","firebase","FormConsult","FormList","constructor","props","state","isAdmin","date","number","getRapportsByDate","bind","getRapportsByNumber","getRapportsByUser","resetState","render","items","e","setState","target","value","type","map","item","index","db","firestore","collection","where","auth","currentUser","name","event","preventDefault","onSnapshot","querySnapshot","docs","componentWillUnmount"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport firebase from 'firebase';\r\nimport FormConsult from './FormConsult'\r\n\r\nclass FormList extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            isAdmin: props.isAdmin,\r\n            date: null,\r\n            number: null\r\n        }\r\n        this.getRapportsByDate = this.getRapportsByDate.bind(this);\r\n        this.getRapportsByNumber = this.getRapportsByNumber.bind(this);\r\n        this.getRapportsByUser = this.getRapportsByUser.bind(this);\r\n        this.resetState = this.resetState.bind(this);\r\n    }\r\n    render() {\r\n        if (this.state.isAdmin) {\r\n            if (!this.state.items) {\r\n                return (\r\n                    <Fragment>\r\n                        <h3>Rechercher les rapports</h3>\r\n                        <form onSubmit={this.getRapportsByDate}>\r\n                            <div>\r\n                                <label htmlFor=\"date\">Date : </label>\r\n                                <input type=\"date\" id=\"date\" name=\"date\"\r\n                                    onChange={e => this.setState({ date: e.target.value })} required></input>\r\n                                <button className=\"pink_button\" type=\"submit\">Rapports</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                        <form onSubmit={this.getRapportsByNumber}>\r\n                            <div>\r\n                                <label htmlFor=\"numero\">N° Train : </label>\r\n                                <input type=\"number\" id=\"number\" name=\"number\"\r\n                                    onChange={e => this.setState({ number: e.target.value })} required></input>\r\n                                <button className=\"pink_button\" type=\"submit\">Rapports</button>\r\n                            </div>\r\n\r\n                        </form>\r\n                    </Fragment>\r\n\r\n                )\r\n            } else if (this.state.type === \"date\") {\r\n                return (\r\n                    <Fragment>\r\n                        {\r\n                            this.state.items.map((item, index) =>\r\n                                <FormConsult data={item} key={index} type=\"date\" />\r\n                            )\r\n                        }\r\n                        <button className=\"pink_button\" id=\"reset-button\" type=\"submit\" onClick={this.resetState}>RAZ</button>\r\n                    </Fragment>\r\n                )\r\n            } else {\r\n                return (\r\n                    <Fragment>\r\n                        {\r\n                            this.state.items.map((item, index) =>\r\n                                <FormConsult data={item} key={index} type=\"number\" />\r\n                            )\r\n                        }\r\n                        <button className=\"pink_button\" id=\"reset-button\" type=\"submit\" onClick={this.resetState}>RAZ</button>\r\n                    </Fragment>\r\n                )\r\n            }\r\n        } else {\r\n            return (\r\n                <div>\r\n                    <p>Accès à cette page non autorisé</p>\r\n                </div>\r\n            )\r\n\r\n        }\r\n\r\n    }\r\n    getRapportsByUser() {\r\n        let db = firebase.firestore();\r\n        db.collection('rapports').where('user', \"===\", firebase.auth().currentUser.name)\r\n    }\r\n\r\n    getRapportsByDate(event) {\r\n        event.preventDefault();\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\").where(\"data.date\", \"==\", this.state.date)\r\n\r\n            .onSnapshot((querySnapshot) => {\r\n                this.setState({\r\n                    items: querySnapshot.docs,\r\n                    type: \"date\"\r\n                });\r\n            })\r\n    }\r\n    getRapportsByNumber(event) {\r\n        event.preventDefault();\r\n        let db = firebase.firestore();\r\n        db.collection(\"rapports\").where(\"data.numeroTrain\", \"==\", this.state.number)\r\n\r\n            .onSnapshot((querySnapshot) => {\r\n                this.setState({\r\n                    items: querySnapshot.docs,\r\n                    type: \"number\"\r\n                });\r\n            })\r\n    }\r\n    resetState() {\r\n        this.setState({ items: null, type: null, date: null, number: null })\r\n    }\r\n    componentWillUnmount() {\r\n        this.resetState();\r\n    }\r\n}\r\n\r\nexport default FormList;"]},"metadata":{},"sourceType":"module"}